<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on YanHowey Wang</title><link>https://howey.deno.dev/tags/golang/</link><description>Recent content in golang on YanHowey Wang</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 26 Jul 2023 22:21:16 +0800</lastBuildDate><atom:link href="https://howey.deno.dev/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>gin 项目初始化之mysql连接</title><link>https://howey.deno.dev/posts/2307262202/</link><pubDate>Wed, 26 Jul 2023 22:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2307262202/</guid><description>gin 项目初始化之 mysql 连接 Link to heading 1. 安装相关包 Link to heading go get gorm.io/gorm go get gorm.io/driver/mysql 2.修改 mysql 相关配置如下： Link to heading mysql: host: 127.0.0.1 port: 3306 db: nlkj_db table_prefix: nlkj_ user: root password: 123456 log_level: dev config: &amp;#34;charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local&amp;#34; max_idle_cons: 10 MaxOpenCons: 100 对应 mysql 配置结构体修改如下
package config import &amp;#34;strconv&amp;#34; type Mysql struct { Host string `yaml:&amp;#34;host&amp;#34;` Port int `yaml:&amp;#34;port&amp;#34;` DB string `yaml:&amp;#34;db&amp;#34;` TablePrefix string `yaml:&amp;#34;table_prefix&amp;#34;` User string `yaml:&amp;#34;user&amp;#34;` Password string `yaml:&amp;#34;password&amp;#34;` LogLevel string `yaml:&amp;#34;log_level&amp;#34;` Config string `yaml:&amp;#34;config&amp;#34;` MaxIdleCons int `yaml:&amp;#34;max_idle_cons&amp;#34;` MaxOpenCons int `yaml:&amp;#34;max_open_cons&amp;#34;` } // 连接url拼接 func (m *Mysql) Dsn() string { return m.</description></item><item><title>gin 项目初始化之配置文件</title><link>https://howey.deno.dev/posts/2307262203/</link><pubDate>Wed, 26 Jul 2023 22:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2307262203/</guid><description>配置文件 Link to heading 安装 yaml 解析包 Link to heading go get gopkg.in/yarm.v2 项目目录下新建settings.yaml 配置如下：
app: page_size: 10 jwt_serret: 23347$040412 run_mode: debug server: host: &amp;#34;0.0.0.0&amp;#34; port: 8080 env: dev read_timeout: 60 write_timeout: 60 logger: level: info prefix: &amp;#34;[nlkj_info]&amp;#34; director: log show-line: true log-in-console: true mysql: host: 127.0.0.1 port: 3306 db: nlkj_db table_prefix: blkj_ user: root password: 123456 log_level: dev 目录下新建 config/config.go 文件
package config type Config struct { App App Server Server Logger Logger Mysql Mysql } 目录下新建 config/mysql.</description></item><item><title>gin项目初始化之logrus配置</title><link>https://howey.deno.dev/posts/2307262204/</link><pubDate>Wed, 26 Jul 2023 22:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2307262204/</guid><description>gin 项目初始化之 logrus 配置 Link to heading 1. 安装 logrus Link to heading go get github.com/sirupsen/logrus 2. 配置 global Link to heading package global import ( &amp;#34;gin_vue_blog/config&amp;#34; &amp;#34;github.com/sirupsen/logrus&amp;#34; &amp;#34;gorm.io/gorm&amp;#34; ) var ( Config *config.Config DB *gorm.DB Log *logrus.Logger ) 3.新建 core/logrus.go 文件 Link to heading package core import ( &amp;#34;bytes&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;gin_vue_blog/global&amp;#34; &amp;#34;github.com/sirupsen/logrus&amp;#34; &amp;#34;os&amp;#34; &amp;#34;path&amp;#34; &amp;#34;time&amp;#34; ) const ( red = 31 yellow = 33 blue = 36 gray = 37 ) type LogFormatter struct { } func (t *LogFormatter) Format(entry *logrus.</description></item></channel></rss>