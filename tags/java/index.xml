<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on YanHowey Wang</title><link>https://howey.deno.dev/tags/java/</link><description>Recent content in Java on YanHowey Wang</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 08 Jul 2024 16:19:01 +0800</lastBuildDate><atom:link href="https://howey.deno.dev/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>如何理解DAO，DTO，DO，VO，AO，BO，POJO，PO，Entity，Model，View？</title><link>https://howey.deno.dev/posts/24070816/</link><pubDate>Mon, 08 Jul 2024 16:19:01 +0800</pubDate><guid>https://howey.deno.dev/posts/24070816/</guid><description> 简称 描述 DAO （Data Access Object）数据访问对象 DTO （Data Transfer Object）数据传输对象 DO （Domain Object）领域对象 VO （View Object）视图模型 AO （Application Object）应用对象 BO （ Business Object）业务对象 POJO （Persistent Object）持久化对象 Entity （应用程序域中的一个概念）实体 Model （概念实体模型）实体类和模型 View （概念视图模型）视图模型</description></item><item><title>idea如何激活</title><link>https://howey.deno.dev/posts/2406061421/</link><pubDate>Thu, 06 Jun 2024 14:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2406061421/</guid><description> 1. 下载官网idea Link to heading 2. 下载 ja-netfilter-all Link to heading 3. 解压下载的ja-netfilter-all压缩包,进入scripts目录,依次执行install-all-users.vbs、install-current-user.vbs Link to heading 4. 执行完成之后，打开激活码网站，复制激活码 Link to heading 5. 打开idea，粘贴激活码，点击Activate Link to heading</description></item><item><title>springtBoot集成Knife4j</title><link>https://howey.deno.dev/posts/2406061121/</link><pubDate>Thu, 06 Jun 2024 11:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2406061121/</guid><description>1. 在配置文件：pom.xml中加入 Link to heading &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.xiaoymin&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;knife4j-openapi3-jakarta-spring-boot-starter&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.5.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2. 在配置文件：application.yml中加入 Link to heading # springdoc-openapi项目配置 springdoc: swagger-ui: path: /swagger-ui.html tags-sorter: alpha operations-sorter: alpha api-docs: path: /v3/api-docs group-configs: - group: &amp;#39;default&amp;#39; paths-to-match: &amp;#39;/**&amp;#39; packages-to-scan: com.nlkj.nlkjweb.controller # 扫描的包，注意改成自己的包 # knife4j的增强配置，不需要增强可以不配 knife4j: enable: true setting: language: zh_cn 3. 新建config包，在config包中新建类：SwaggerConfig Link to heading package com.nlkj.nlkjweb.config; import io.swagger.v3.oas.models.OpenAPI; import io.swagger.v3.oas.models.info.Contact; import io.swagger.v3.oas.models.info.Info; import io.swagger.v3.oas.models.info.License; import org.springdoc.core.models.GroupedOpenApi; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; @Configuration public class SwaggerConfig { @Bean public GroupedOpenApi adminApi() { // 创建了一个api接口的分组 return GroupedOpenApi.</description></item></channel></rss>