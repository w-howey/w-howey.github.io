<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SpringBoot on YanHowey Wang</title><link>https://howey.deno.dev/tags/springboot/</link><description>Recent content in SpringBoot on YanHowey Wang</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 11 Jul 2024 15:09:16 +0800</lastBuildDate><atom:link href="https://howey.deno.dev/tags/springboot/index.xml" rel="self" type="application/rss+xml"/><item><title>springboot中application.xml多环境配置</title><link>https://howey.deno.dev/posts/2407111509/</link><pubDate>Thu, 11 Jul 2024 15:09:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2407111509/</guid><description> 1. 新建application-dev.xml和application-prod.xml文件 Link to heading 2. 在application.xml文件中配置spring.profiles.active属性` Link to heading spring: profiles: active: dev 3. 在application-dev.xml文件中配置开发环境需要的属性 Link to heading</description></item><item><title>springboot集成mybatis-plus-generator-ui自动生成代码</title><link>https://howey.deno.dev/posts/2407111445/</link><pubDate>Thu, 11 Jul 2024 14:45:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2407111445/</guid><description>1. 引入依赖：pom.xml中添加 Link to heading &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.davidfantasy&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-plus-generator-ui&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.0.5&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; 2. 在src/test/java目录下新建一个Generator.java文件` Link to heading public class GeberatorUIServer { public static void main(String[] args) { GeneratorConfig config = GeneratorConfig.builder().jdbcUrl(&amp;#34;jdbc:mysql://192.168.1.211:3306/example&amp;#34;) .userName(&amp;#34;root&amp;#34;) .password(&amp;#34;root&amp;#34;) .driverClassName(&amp;#34;com.mysql.cj.jdbc.Driver&amp;#34;) //数据库schema，MSSQL,PGSQL,ORACLE,DB2类型的数据库需要指定 .schemaName(&amp;#34;myBusiness&amp;#34;) //数据库表前缀，生成entity名称时会去掉(v2.0.3新增) .tablePrefix(&amp;#34;t_&amp;#34;) //如果需要修改entity及其属性的命名规则，以及自定义各类生成文件的命名规则，可自定义一个NameConverter实例，覆盖相应的名称转换方法，详细可查看该接口的说明： .nameConverter(new NameConverter() { /** * 自定义Service类文件的名称规则，entityName是NameConverter.entityNameConvert处理表名后的返回结果，如有特别的需求可以自定义实现 */ @Override public String serviceNameConvert(String entityName) { return entityName + &amp;#34;Service&amp;#34;; } /** * 自定义Controller类文件的名称规则 */ @Override public String controllerNameConvert(String entityName) { return entityName + &amp;#34;Action&amp;#34;; } }) //所有生成的java文件的父包名，后续也可单独在界面上设置 .</description></item><item><title>springboot集成mybatis-plus自动生成代码</title><link>https://howey.deno.dev/posts/2407111421/</link><pubDate>Thu, 11 Jul 2024 14:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2407111421/</guid><description>1. 引入依赖：pom.xml中添加 Link to heading &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.baomidou&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-plus-generator&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.freemarker&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;freemarker&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.3.30&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2. 在src/test/java目录下新建一个Generator.java文件` Link to heading package com.nlkj.nlkjweb.AutoGenerateCode; import com.baomidou.mybatisplus.generator.FastAutoGenerator; import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine; import java.nio.file.Paths; public class GeberatorServer { private static String dbUrl = &amp;#34;jdbc:mysql://xx.xx.xxx.xx:3306/nlkj_db?useSSL=false&amp;amp;serverTimezone=UTC&amp;#34;; private static String dbUser = &amp;#34;xxxx&amp;#34;; private static String dbPassword = &amp;#34;xxxx&amp;#34;; private static String packageName = &amp;#34;com.nlkj.nlkjweb.admin&amp;#34;; public static void main(String[] args) { FastAutoGenerator.create(dbUrl, dbUser, dbPassword) .globalConfig(builder -&amp;gt; builder .author(&amp;#34;howey&amp;#34;) .</description></item><item><title>springboot项目build脚本</title><link>https://howey.deno.dev/posts/2406061521/</link><pubDate>Thu, 06 Jun 2024 15:21:16 +0800</pubDate><guid>https://howey.deno.dev/posts/2406061521/</guid><description> 在项目文件下新建build.bat文件 Link to heading @echo off echo Starting Maven package... call mvn clean package echo Packaging complete. setlocal enabledelayedexpansion set &amp;#34;DEST_DIR=./build/&amp;#34; if not exist &amp;#34;%DEST_DIR%&amp;#34; mkdir &amp;#34;%DEST_DIR%&amp;#34; if not exist target ( echo target目录不存在，请确保项目已经正确编译。 exit /b ) REM 遍历target目录下的所有.jar文件并移动到build目录下 for %%f in (target\*.jar) do ( copy &amp;#34;%%f&amp;#34; build) echo 打包完成，所有.jar文件已移动到build目录下。 echo All JARs moved successfully. endlocal</description></item></channel></rss>